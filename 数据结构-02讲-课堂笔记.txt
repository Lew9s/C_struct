数据结构-02课堂笔记
上一讲知识点回顾
1.课程介绍
2.数据结构相关的概念
3.逻辑结构的概念及分类
4.存储结构的概念及分类
5.算法
6.数据结构：研究数据元素的逻辑结构，在逻辑结构的基础上，就可以确定对其操作，然后各种操作如何实现？->算法，依赖于存储结构。
同一种逻辑结构做同一种操作，如果采用了不同的存储结构，则其算法不同。
7.算法分析:算法好，还是不好。衡量依据：时间复杂度和空间复杂度。
8.为什么要研究数据结构？
   1)现代计算机的应用90%以上是用于非数值计算。如果数据结构不当，算法效率会不同。
   比如：电话号码本的印刷：按姓名的拼音顺序印刷，查找效率高
   2)对于实际问题，如果没有合适结构，很难设计出算法。

        [例1.4]求两个n阶方阵的乘积C＝AXB，其算法如下：
        ＃define  n 自然数
         MATRIXMLT(float A[ ][n], float B[][n], float C[][n])
       ｛       int  i,j,k;
   (1)          for(i=0;i<n;i++)
   (2)               for(j=0;j<n;j++)
   (3)               {    C[i][j]=0;
   (4)                     for(k=0; k<n; k++)
   (5)                          C[i][j]=c[i][j]+A[i][k]*B[k][j];
                       }
         }                      T(n)=2n3+3n2+2n+1

例如：
  int sum=0;//1次
  for(int i=1;i<=n;++i)//1+(n+1)+n
    sum+=i;//n次
总的执行次数为：1+(1+n+1+n)+n=3n+3
T(n)=3n+3
算法时间耗费通常是问题规模n的函数，当问题规模n趋向于无穷大时，记作：O(n)

例如：
int sum=0;//1次
  for(int i=1;i<=10000000;++i)//1+(10000000+1)+10000000
    sum+=i;//10000000次
总的执行次数为：1+(1+10000000+1+10000000)+10000000=3*10000000+3
记作：O(1)
        1.3  设n为正整数，利用大“O”记号，将下列程序段的执行时间表示为n的函数。
    (1)  i=1;k=0;                         (2) i=0;  k=0;
           while(i<n)                           do
           { k=k+10*i;  i++;                  {  k=k+10*i; i++;} while(i<n);
           }                                               

    (3)  i=1;  j=0;                        (4) x=n;  /* n>1  */
           while(i+j<=n)                       while(x>=(y+1)*(y+1))
           {  if(i>j)  j++;                              y++;//
              else   i++; }

     (5) x=91;y=100;
           while(y>0)
                if(x>100)  {x=x-10;  y- -;}
                else  x++;                            

y=k
(y+1)的平方<=n
y<=(根号n)-1
循环体执行次数：(根号n)+k2
记作O(根号n)
 
作业：课外完成

第2章  线性表
概念：n(n>=0)个类型相同的数据元素的有限序列。n是表中元素的个数，表长，n为0时，空表
逻辑结构特征:非空的线性表，有且只有一个表头元素和一个表尾元素，表头元素没有前趋，表尾元素没有后继。其余的元素有且只有一个前趋和一个后继。
抽象数据类型(ADT-AbstractDataType):
   描述数据的逻辑结构
   所有操作总称

ADT中，对每一种操作从5个方面进行描述
1)前置条件
2)输入
3)输出
4)功能
5)后置条件
ADT List
   DataStruct:逻辑结构：n(n>=0)个类型相同的数据元素的有限序列。
   Operation:
   (1)置空表
     1)前置条件:表不存
     2)输入:无
     3)输出:无
     4)功能:创建一个空表
     5)后置条件:建立了一个空表   
   (2)求表长
     1)前置条件:表已经存在
     2)输入:无
     3)输出:返回表中元素个数
     4)功能:计算表中元素个数
     5)后置条件:表不变 
   (3)判断表空
     1)前置条件:表已经存在
     2)输入:无
     3)输出:如果表空，返回1，否则返回0
     4)功能:判断表是否为空
     5)后置条件:表不变 
   (4)按位取值
     1)前置条件:表已经存在
     2)输入:指定位置
     3)输出:返回该位置的值
     4)功能:取指定位置上的元素值
     5)后置条件:表不变 
   (5)按值查找
     1)前置条件:表已经存在
     2)输入:指定的元素值
     3)输出:若找到，返回表中与指定的元素值相等的元素所在的位置，否则返回0
     4)功能:找指定的元素值在表中的位置
     5)后置条件:表不变 
   (6)插入
     1)前置条件:表已经存在
     2)输入:指定的位置，要插入的元素
     3)输出:若插入成功，返回1，否则返回0
     4)功能:在指定的位置插入指定的元素
     5)后置条件:若插入成功，表长增1，否则表不变 
   (7)删除按位置
     1)前置条件:表已经存在
     2)输入:要删除的元素所在的位置
     3)输出:若删除成功，返回被删除的元素值。
     4)功能:把表中指定位置上的元素删除，并返回被删除的元素值。
     5)后置条件:若删除成功，则表长减1，否则，表不变。
   (8)按值删除
     1)前置条件:表已经存在
     2)输入:
     3)输出:
     4)功能:
     5)后置条件:
endADT





























